import { useState } from "react";
import { Link, useLocation } from "wouter";
import { Helmet } from "react-helmet-async";
import { useQuery } from "@tanstack/react-query";
import { useAuth } from "@/context/AuthContext";
import { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { 
  BarChart, 
  Users, 
  Briefcase, 
  FileText, 
  Plus, 
  Eye, 
  Edit, 
  Trash2, 
  Clock,
  Building,
  PieChart,
  Calendar,
  Search,
  Download,
  MoreHorizontal,
  ChevronDown,
  StarIcon,
  MessageSquare,
  HelpCircle,
  Inbox,
  Mail,
  CheckCircle2,
  ThumbsUp
} from "lucide-react";
import { Input } from "@/components/ui/input";
import { useToast } from "@/hooks/use-toast";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";
import { Job, Application } from "@shared/schema";
import { format } from "date-fns";

// Custom type for applications with job and applicant details
type ApplicationWithDetails = Application & {
  job: Job;
  applicant: {
    id: number;
    fullName: string;
    email: string;
    profilePicture?: string;
  };
};

const EmployerDashboard = () => {
  const { user } = useAuth();
  const [, navigate] = useLocation();
  const [activeTab, setActiveTab] = useState("overview");
  const [applicationFilter, setApplicationFilter] = useState("all");
  const [searchQuery, setSearchQuery] = useState("");
  const [jobFilter, setJobFilter] = useState<number | "all">("all");
  const { toast } = useToast();

  // Fetch employer's posted jobs - define hooks before conditional returns
  const { data: jobs = [], isLoading: isLoadingJobs } = useQuery<Job[]>({
    queryKey: ['/api/employer/jobs'],
    enabled: !!user, // Only run query if user is logged in
  });

  // Fetch applications for employer's jobs
  const { data: applications = [], isLoading: isLoadingApplications } = useQuery<ApplicationWithDetails[]>({
    queryKey: ['/api/employer/applications'],
    enabled: !!user, // Only run query if user is logged in
  });

  // Fetch company profile data
  const { data: company, isLoading: isLoadingCompany } = useQuery({
    queryKey: ['/api/employer/company'],
    enabled: !!user, // Only run query if user is logged in
  });
  
  // Redirect if not authenticated or not an employer
  if (!user) {
    navigate("/login");
    return null;
  }

  // Get counts for dashboard stats
  const activeJobsCount = jobs.filter(job => job.isActive).length;
  const totalApplicationsCount = applications.length;
  const newApplicationsCount = applications.filter(app => app.status === 'applied').length;
  const interviewsCount = applications.filter(app => app.status === 'interview_scheduled').length;

  // Determine if company profile is complete
  const isCompanyProfileComplete = !!company;

  return (
    <>
      <Helmet>
        <title>Employer Dashboard - Business In Rwanda</title>
        <meta name="description" content="Manage your job postings, view applicants, and track your hiring process." />
      </Helmet>

      <div className="bg-neutral-50 min-h-screen py-8">
        <div className="container mx-auto px-4">
          <div className="flex flex-col md:flex-row gap-6">
            {/* Sidebar */}
            <div className="w-full md:w-1/4">
              <Card>
                <CardHeader>
                  <div className="flex items-center space-x-4">
                    <Avatar className="h-12 w-12">
                      <AvatarImage src={user.profilePicture} alt={user.fullName} />
                      <AvatarFallback className="bg-[#0A3D62] text-white">
                        {user.fullName.split(' ').map(n => n[0]).join('')}
                      </AvatarFallback>
                    </Avatar>
                    <div>
                      <CardTitle className="text-lg">{user.fullName}</CardTitle>
                      <CardDescription>{user.email}</CardDescription>
                    </div>
                  </div>
                </CardHeader>
                <CardContent>
                  {!isCompanyProfileComplete && (
                    <div className="mb-4 p-3 bg-amber-50 border border-amber-200 rounded-md text-sm">
                      <p className="text-amber-800 font-medium mb-2">Complete your company profile</p>
                      <p className="text-amber-700 mb-2">
                        Improve your visibility to job seekers by adding your company details.
                      </p>
                      <Button 
                        size="sm" 
                        variant="outline" 
                        className="text-amber-600 border-amber-300 hover:bg-amber-100 hover:text-amber-800"
                        onClick={() => navigate("/company/create")}
                      >
                        Complete Profile
                      </Button>
                    </div>
                  )}

                  <nav className="space-y-1">
                    <Button
                      variant={activeTab === "overview" ? "default" : "ghost"}
                      className="w-full justify-start"
                      onClick={() => setActiveTab("overview")}
                    >
                      <BarChart className="h-4 w-4 mr-2" />
                      Overview
                    </Button>
                    <Button
                      variant={activeTab === "jobs" ? "default" : "ghost"}
                      className="w-full justify-start"
                      onClick={() => setActiveTab("jobs")}
                    >
                      <Briefcase className="h-4 w-4 mr-2" />
                      Manage Jobs
                    </Button>
                    <Button
                      variant={activeTab === "applications" ? "default" : "ghost"}
                      className="w-full justify-start"
                      onClick={() => setActiveTab("applications")}
                    >
                      <FileText className="h-4 w-4 mr-2" />
                      Applications
                    </Button>
                    <Button
                      variant={activeTab === "company" ? "default" : "ghost"}
                      className="w-full justify-start"
                      onClick={() => setActiveTab("company")}
                    >
                      <Building className="h-4 w-4 mr-2" />
                      Company Profile
                    </Button>
                  </nav>
                </CardContent>
              </Card>
            </div>

            {/* Main Content */}
            <div className="w-full md:w-3/4">
              <Tabs value={activeTab} onValueChange={setActiveTab}>
                {/* Overview Tab */}
                <TabsContent value="overview">
                  <Card>
                    <CardHeader>
                      <div className="flex flex-col md:flex-row md:items-center md:justify-between gap-4">
                        <div>
                          <CardTitle className="text-xl font-heading">Dashboard Overview</CardTitle>
                          <CardDescription>
                            Your hiring activity and statistics at a glance
                          </CardDescription>
                        </div>
                        <div className="flex items-center space-x-2">
                          <select className="border rounded-md px-3 py-1 text-sm bg-white">
                            <option value="7">Last 7 days</option>
                            <option value="30" selected>Last 30 days</option>
                            <option value="90">Last 90 days</option>
                            <option value="all">All time</option>
                          </select>
                          <Button variant="outline" size="sm" className="flex items-center gap-1">
                            <PieChart className="h-4 w-4" />
                            <span>Analytics</span>
                          </Button>
                        </div>
                      </div>
                    </CardHeader>
                    <CardContent>
                      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8">
                        <Card>
                          <CardContent className="pt-6">
                            <div className="flex justify-between items-start">
                              <div>
                                <p className="text-sm text-neutral-500">Active Jobs</p>
                                <h3 className="text-2xl font-bold">{activeJobsCount}</h3>
                                <p className="text-xs text-green-600 mt-1 flex items-center">
                                  <span className="inline-block h-2 w-2 bg-green-500 rounded-full mr-1"></span>
                                  <span>Active listings</span>
                                </p>
                              </div>
                              <div className="bg-blue-100 p-2 rounded-full">
                                <Briefcase className="h-5 w-5 text-[#0A3D62]" />
                              </div>
                            </div>
                          </CardContent>
                        </Card>

                        <Card>
                          <CardContent className="pt-6">
                            <div className="flex justify-between items-start">
                              <div>
                                <p className="text-sm text-neutral-500">Total Applications</p>
                                <h3 className="text-2xl font-bold">{totalApplicationsCount}</h3>
                                <p className="text-xs text-blue-600 mt-1 flex items-center">
                                  <span className="inline-block h-2 w-2 bg-blue-500 rounded-full mr-1"></span>
                                  <span>{totalApplicationsCount > 0 ? '+12% from last month' : 'No change'}</span>
                                </p>
                              </div>
                              <div className="bg-green-100 p-2 rounded-full">
                                <Users className="h-5 w-5 text-[#00A86B]" />
                              </div>
                            </div>
                          </CardContent>
                        </Card>

                        <Card>
                          <CardContent className="pt-6">
                            <div className="flex justify-between items-start">
                              <div>
                                <p className="text-sm text-neutral-500">New Applications</p>
                                <h3 className="text-2xl font-bold">{newApplicationsCount}</h3>
                                <p className="text-xs text-amber-600 mt-1 flex items-center">
                                  <span className="inline-block h-2 w-2 bg-amber-500 rounded-full mr-1"></span>
                                  <span>Needs review</span>
                                </p>
                              </div>
                              <div className="bg-red-100 p-2 rounded-full">
                                <FileText className="h-5 w-5 text-[#BD2031]" />
                              </div>
                            </div>
                          </CardContent>
                        </Card>

                        <Card>
                          <CardContent className="pt-6">
                            <div className="flex justify-between items-start">
                              <div>
                                <p className="text-sm text-neutral-500">Scheduled Interviews</p>
                                <h3 className="text-2xl font-bold">{interviewsCount}</h3>
                                <p className="text-xs text-purple-600 mt-1 flex items-center">
                                  <span className="inline-block h-2 w-2 bg-purple-500 rounded-full mr-1"></span>
                                  <span>This week</span>
                                </p>
                              </div>
                              <div className="bg-purple-100 p-2 rounded-full">
                                <Calendar className="h-5 w-5 text-purple-600" />
                              </div>
                            </div>
                          </CardContent>
                        </Card>
                      </div>

                      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <Card>
                          <CardHeader className="pb-2">
                            <CardTitle className="text-base font-medium flex items-center justify-between">
                              <span>Recent Applications</span>
                              <Button variant="link" size="sm" className="text-xs p-0" onClick={() => setActiveTab("applications")}>
                                View All
                              </Button>
                            </CardTitle>
                          </CardHeader>
                          <CardContent>
                            {isLoadingApplications ? (
                              <div className="space-y-4">
                                {[1, 2, 3].map((_, i) => (
                                  <div key={i} className="h-12 animate-pulse bg-neutral-100 rounded-md"></div>
                                ))}
                              </div>
                            ) : applications.length > 0 ? (
                              <div className="space-y-4">
                                {applications.slice(0, 5).map((application) => (
                                  <div key={application.id} className="flex items-center justify-between border-b pb-3 last:border-0 last:pb-0">
                                    <div className="flex items-center space-x-3">
                                      <Avatar className="h-8 w-8">
                                        <AvatarImage src={application.applicant.profilePicture} alt={application.applicant.fullName} />
                                        <AvatarFallback className="bg-neutral-200 text-neutral-700 text-xs">
                                          {application.applicant.fullName.split(' ').map(n => n[0]).join('')}
                                        </AvatarFallback>
                                      </Avatar>
                                      <div>
                                        <p className="text-sm font-medium">{application.applicant.fullName}</p>
                                        <p className="text-xs text-neutral-500">{application.job.title}</p>
                                      </div>
                                    </div>
                                    <div className="flex items-center gap-2">
                                      <Badge
                                        className={
                                          application.status === 'hired' ? 'bg-green-100 text-green-800 hover:bg-green-100' : 
                                          application.status === 'rejected' ? 'bg-red-100 text-red-800 hover:bg-red-100' : ''
                                        }
                                        variant={
                                          application.status === 'applied' ? 'default' : 
                                          application.status === 'reviewed' ? 'secondary' : 
                                          application.status === 'interview_scheduled' ? 'outline' : 
                                          application.status === 'hired' ? 'outline' : 'destructive'
                                        }
                                      >
                                        {application.status.replace('_', ' ')}
                                      </Badge>
                                      <Button variant="ghost" size="sm" className="p-0 h-6 w-6">
                                        <Eye className="h-3.5 w-3.5" />
                                      </Button>
                                    </div>
                                  </div>
                                ))}
                              </div>
                            ) : (
                              <div className="text-center py-6 text-neutral-500">
                                <FileText className="h-10 w-10 mx-auto mb-2 text-neutral-300" />
                                <p>No applications yet</p>
                              </div>
                            )}
                          </CardContent>
                        </Card>

                        <Card>
                          <CardHeader className="pb-2">
                            <CardTitle className="text-base font-medium flex items-center justify-between">
                              <span>Recruitment Pipeline</span>
                              <div className="flex gap-1">
                                <Button variant="ghost" size="sm" className="p-0 h-6 w-6">
                                  <PieChart className="h-3.5 w-3.5" />
                                </Button>
                              </div>
                            </CardTitle>
                          </CardHeader>
                          <CardContent>
                            <div className="space-y-3">
                              {/* Applicant Pipeline Visualization */}
                              <div className="flex items-center gap-2 mt-2">
                                <div className="w-full h-5 bg-neutral-100 rounded-full overflow-hidden flex">
                                  <div 
                                    className="bg-blue-500 h-full"
                                    style={{ width: `${(applications.filter(a => a.status === 'applied').length / Math.max(applications.length, 1)) * 100}%` }}
                                  ></div>
                                  <div 
                                    className="bg-purple-500 h-full"
                                    style={{ width: `${(applications.filter(a => a.status === 'reviewed').length / Math.max(applications.length, 1)) * 100}%` }}
                                  ></div>
                                  <div 
                                    className="bg-amber-500 h-full"
                                    style={{ width: `${(applications.filter(a => a.status === 'interview_scheduled').length / Math.max(applications.length, 1)) * 100}%` }}
                                  ></div>
                                  <div 
                                    className="bg-green-500 h-full"
                                    style={{ width: `${(applications.filter(a => a.status === 'hired').length / Math.max(applications.length, 1)) * 100}%` }}
                                  ></div>
                                  <div 
                                    className="bg-red-500 h-full"
                                    style={{ width: `${(applications.filter(a => a.status === 'rejected').length / Math.max(applications.length, 1)) * 100}%` }}
                                  ></div>
                                </div>
                              </div>
                              
                              <div className="grid grid-cols-2 md:grid-cols-5 gap-2 text-xs">
                                <div>
                                  <div className="flex items-center mb-1">
                                    <span className="w-2 h-2 bg-blue-500 rounded-full mr-1"></span>
                                    <span className="font-medium">Applied</span>
                                  </div>
                                  <p className="ml-3">{applications.filter(a => a.status === 'applied').length}</p>
                                </div>
                                <div>
                                  <div className="flex items-center mb-1">
                                    <span className="w-2 h-2 bg-purple-500 rounded-full mr-1"></span>
                                    <span className="font-medium">Reviewed</span>
                                  </div>
                                  <p className="ml-3">{applications.filter(a => a.status === 'reviewed').length}</p>
                                </div>
                                <div>
                                  <div className="flex items-center mb-1">
                                    <span className="w-2 h-2 bg-amber-500 rounded-full mr-1"></span>
                                    <span className="font-medium">Interview</span>
                                  </div>
                                  <p className="ml-3">{applications.filter(a => a.status === 'interview_scheduled').length}</p>
                                </div>
                                <div>
                                  <div className="flex items-center mb-1">
                                    <span className="w-2 h-2 bg-green-500 rounded-full mr-1"></span>
                                    <span className="font-medium">Hired</span>
                                  </div>
                                  <p className="ml-3">{applications.filter(a => a.status === 'hired').length}</p>
                                </div>
                                <div>
                                  <div className="flex items-center mb-1">
                                    <span className="w-2 h-2 bg-red-500 rounded-full mr-1"></span>
                                    <span className="font-medium">Rejected</span>
                                  </div>
                                  <p className="ml-3">{applications.filter(a => a.status === 'rejected').length}</p>
                                </div>
                              </div>
                              
                              <Separator className="my-3" />
                              
                              <div>
                                <h3 className="text-sm font-medium mb-3">Upcoming Interviews</h3>
                                {applications.filter(a => a.status === 'interview_scheduled').length > 0 ? (
                                  <div className="space-y-2">
                                    {applications.filter(a => a.status === 'interview_scheduled').slice(0, 2).map((app) => (
                                      <div key={app.id} className="flex items-center justify-between">
                                        <div className="flex items-center gap-2">
                                          <Calendar className="h-3.5 w-3.5 text-amber-500" />
                                          <span className="text-xs">{format(new Date(), 'E, MMM d, h:mm a')}</span>
                                        </div>
                                        <p className="text-xs font-medium">{app.applicant.fullName}</p>
                                      </div>
                                    ))}
                                  </div>
                                ) : (
                                  <p className="text-xs text-neutral-500">No upcoming interviews</p>
                                )}
                              </div>
                            </div>
                          </CardContent>
                        </Card>
                        
                        <Card>
                          <CardHeader className="pb-2">
                            <CardTitle className="text-base font-medium flex items-center justify-between">
                              <span>Active Job Listings</span>
                              <Button variant="link" size="sm" className="text-xs p-0" onClick={() => setActiveTab("jobs")}>
                                View All
                              </Button>
                            </CardTitle>
                          </CardHeader>
                          <CardContent>
                            {isLoadingJobs ? (
                              <div className="space-y-4">
                                {[1, 2, 3].map((_, i) => (
                                  <div key={i} className="h-12 animate-pulse bg-neutral-100 rounded-md"></div>
                                ))}
                              </div>
                            ) : jobs.length > 0 ? (
                              <div className="space-y-4">
                                {jobs.filter(job => job.isActive).slice(0, 5).map((job) => (
                                  <div key={job.id} className="space-y-2 border-b pb-3 last:border-0 last:pb-0">
                                    <div className="flex justify-between items-center">
                                      <p className="text-sm font-medium">{job.title}</p>
                                      <Badge variant="outline" className="bg-green-50 text-green-700 border-green-200">
                                        {applications.filter(a => a.jobId === job.id).length} Applicants
                                      </Badge>
                                    </div>
                                    <div className="flex items-center text-xs text-neutral-500 space-x-4">
                                      <div className="flex items-center">
                                        <Clock className="h-3 w-3 mr-1" />
                                        <span>
                                          Posted {format(new Date(job.createdAt), 'MMM d, yyyy')}
                                        </span>
                                      </div>
                                    </div>
                                  </div>
                                ))}
                              </div>
                            ) : (
                              <div className="text-center py-6 text-neutral-500">
                                <Briefcase className="h-10 w-10 mx-auto mb-2 text-neutral-300" />
                                <p>No jobs posted yet</p>
                                <Button variant="outline" size="sm" className="mt-2" onClick={() => navigate("/post-job")}>
                                  <Plus className="h-3.5 w-3.5 mr-1" />
                                  Post a Job
                                </Button>
                              </div>
                            )}
                          </CardContent>
                        </Card>
                        
                        <Card>
                          <CardHeader className="pb-2">
                            <CardTitle className="text-base font-medium">Quick Actions</CardTitle>
                          </CardHeader>
                          <CardContent>
                            <div className="grid grid-cols-2 gap-3">
                              <Button onClick={() => navigate("/post-job")} className="h-auto py-4 bg-[#0A3D62] hover:bg-[#082C46]">
                                <div className="flex flex-col items-center">
                                  <Plus className="h-5 w-5 mb-1" />
                                  <span>Post a Job</span>
                                </div>
                              </Button>
                              <Button variant="outline" className="h-auto py-4">
                                <div className="flex flex-col items-center">
                                  <FileText className="h-5 w-5 mb-1" />
                                  <span>Review CVs</span>
                                </div>
                              </Button>
                              <Button variant="outline" className="h-auto py-4">
                                <div className="flex flex-col items-center">
                                  <Calendar className="h-5 w-5 mb-1" />
                                  <span>Schedule Interview</span>
                                </div>
                              </Button>
                              <Button variant="outline" className="h-auto py-4">
                                <div className="flex flex-col items-center">
                                  <Users className="h-5 w-5 mb-1" />
                                  <span>Candidate Pool</span>
                                </div>
                              </Button>
                            </div>
                          </CardContent>
                        </Card>
                      </div>
                    </CardContent>
                  </Card>
                </TabsContent>

                {/* Jobs Tab */}
                <TabsContent value="jobs">
                  <Card>
                    <CardHeader className="flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-2 sm:space-y-0">
                      <div>
                        <CardTitle className="text-xl font-heading">Manage Jobs</CardTitle>
                        <CardDescription>View and manage your job listings</CardDescription>
                      </div>
                      <Link href="/post-job">
                        <Button className="bg-[#0A3D62] hover:bg-[#082C46]">
                          <Plus className="h-4 w-4 mr-2" />
                          Post New Job
                        </Button>
                      </Link>
                    </CardHeader>
                    <CardContent>
                      {isLoadingJobs ? (
                        <div className="space-y-4">
                          {[1, 2, 3].map((_, i) => (
                            <div key={i} className="h-24 animate-pulse bg-neutral-100 rounded-md"></div>
                          ))}
                        </div>
                      ) : jobs.length > 0 ? (
                        <div className="space-y-4">
                          {jobs.map((job) => (
                            <Card key={job.id} className="overflow-hidden">
                              <CardContent className="p-0">
                                <div className="p-4 sm:p-6">
                                  <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-4">
                                    <div>
                                      <h3 className="text-lg font-medium">{job.title}</h3>
                                      <p className="text-sm text-neutral-500 flex items-center gap-2 mt-1">
                                        <Calendar className="h-4 w-4" />
                                        Posted on {format(new Date(job.createdAt), 'MMM d, yyyy')}
                                      </p>
                                    </div>
                                    <Badge 
                                      variant={job.isActive ? 'default' : 'secondary'}
                                      className={job.isActive ? 'bg-[#00A86B]' : ''}
                                    >
                                      {job.isActive ? 'Active' : 'Inactive'}
                                    </Badge>
                                  </div>

                                  <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-4">
                                    <div className="flex items-center">
                                      <Briefcase className="h-4 w-4 text-neutral-500 mr-2" />
                                      <span className="text-sm">
                                        {job.type.replace('_', ' ')}
                                      </span>
                                    </div>
                                    <div className="flex items-center">
                                      <Users className="h-4 w-4 text-neutral-500 mr-2" />
                                      <span className="text-sm">
                                        {applications.filter(a => a.jobId === job.id).length} Applicants
                                      </span>
                                    </div>
                                    <div className="flex items-center">
                                      <Clock className="h-4 w-4 text-neutral-500 mr-2" />
                                      <span className="text-sm">
                                        {job.deadline ? (
                                          <>Expires {format(new Date(job.deadline), 'MMM d, yyyy')}</>
                                        ) : (
                                          <>No Deadline</>
                                        )}
                                      </span>
                                    </div>
                                  </div>

                                  <Separator className="my-4" />

                                  <div className="flex flex-wrap justify-end gap-2">
                                    <Button variant="outline" size="sm">
                                      <Eye className="h-4 w-4 mr-2" />
                                      View Applicants
                                    </Button>
                                    <Button variant="outline" size="sm">
                                      <Edit className="h-4 w-4 mr-2" />
                                      Edit
                                    </Button>
                                    <Button variant="outline" size="sm" className="text-red-500 hover:text-red-700 hover:bg-red-50">
                                      <Trash2 className="h-4 w-4 mr-2" />
                                      Remove
                                    </Button>
                                  </div>
                                </div>
                              </CardContent>
                            </Card>
                          ))}
                        </div>
                      ) : (
                        <div className="text-center py-12">
                          <Briefcase className="h-12 w-12 mx-auto mb-4 text-neutral-300" />
                          <h3 className="text-lg font-medium mb-2">No jobs posted yet</h3>
                          <p className="text-neutral-500 mb-6">
                            Start attracting the best talent by posting your first job
                          </p>
                          <Link href="/post-job">
                            <Button className="bg-[#0A3D62] hover:bg-[#082C46]">
                              Post Your First Job
                            </Button>
                          </Link>
                        </div>
                      )}
                    </CardContent>
                  </Card>
                </TabsContent>

                {/* Applications Tab */}
